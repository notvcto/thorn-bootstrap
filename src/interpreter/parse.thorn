import "interpreter/command"

fn read(path) {
  # Simulate file reading â€” this would be native I/O later
  return _builtin_read(path)
}

fn parse(source) {
  let lines = source.split("\n")
  let commands = []

  for line in lines {
    if line.starts_with("let ") {
      let parts = line.replace("let ", "").split(" = ")
      commands.append(Command {
        kind: "let",
        name: parts[0],
        value: parts[1]
      })
    } else if line.contains("(") {
      let name = line.slice(0, line.index_of("("))
      let args_raw = line.slice(line.index_of("(") + 1, line.index_of(")"))
      let args = args_raw.split(", ")
      commands.append(Command {
        kind: "call",
        target: name,
        args: args
      })
    }
  }

  return commands
}
